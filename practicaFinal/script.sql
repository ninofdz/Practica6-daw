create database COMPUTERSTORE;
USE COMPUTERSTORE;

CREATE TABLE `CATEGORY`(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(32) NOT NULL,
    PARENTCATEGORY INT,
    foreign key (PARENTCATEGORY) REFERENCES CATEGORY(ID));
    
CREATE TABLE `BRAND`(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(32) NOT NULL);
    
CREATE TABLE `PRODUCT`(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(32) NOT NULL,
    STOCK INT DEFAULT 0,
    PRICE DECIMAL(6,2) NOT NULL,
    SPONSORED ENUM('Y', 'N') DEFAULT 'N',
    SHORTDESCRIPTION VARCHAR(128),
    LONGDESCRIPTION VARCHAR(1024),
    BRAND INT NOT NULL,
    CATEGORY INT NOT NULL,
    FOREIGN KEY (BRAND) REFERENCES BRAND(ID),
    FOREIGN KEY (CATEGORY) REFERENCES CATEGORY(ID));

CREATE TABLE `PROMOTION`(
		ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        DISCOUNTPERCENTAGE INT(2) NOT NULL,
        STARTDATE DATETIME NOT NULL DEFAULT NOW(),
        ENDDATE DATETIME,
        PRODUCT INT NOT NULL,
        FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID));
        
CREATE TABLE `IMAGE`(
	URL VARCHAR(256),
    PRODUCT INT,
    PRIMARY KEY (URL, PRODUCT),
    FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID));
        
CREATE TABLE `USER`(
	USERNAME VARCHAR(32) NOT NULL PRIMARY KEY,
    PASSWORD VARCHAR(32) NOT NULL,
    CREATIONDATE DATETIME NOT NULL DEFAULT NOW());
    
CREATE TABLE `ORDER`(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DATE DATETIME NOT NULL DEFAULT NOW(),
    PAYMENTINFO ENUM('PAID', 'PENDING', 'REJECTED') NOT NULL DEFAULT 'PENDING',
    STATUS ENUM('RECEIVED', 'PROCESSING', 'SHIPPED', 
				'ONDELIVERY', 'DELIVERED', 'CANCELED', 'RETURNED') NOT NULL DEFAULT 'RECEIVED',
    SHIPPINGADDRESS VARCHAR(256) NOT NULL,
    USER VARCHAR(32) NOT NULL,
    FOREIGN KEY (USER) REFERENCES USER(USERNAME));
    
CREATE TABLE `ORDERITEM`(
	ORDERLINE INT NOT NULL,
    `ORDER` INT NOT NULL,
    PRODUCT INT NOT NULL,
    QUANTITY INT NOT NULL DEFAULT 1,
    PRICE DECIMAL(6,2) NOT NULL,
    PRIMARY KEY (ORDERLINE, `ORDER`),
    FOREIGN KEY (`ORDER`) REFERENCES `ORDER`(ID),
    FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID));
